version: '3.7'

# ==============================================================================
# Services
# ------------------------------------------------------------------------------
services:

# ------------------------------------------------------------------------------
# prometheus
# ------------------------------------------------------------------------------
  prometheus:
    image: "prom/prometheus:v2.10.0"
    restart: unless-stopped
    networks:
      - internal
    expose:
      - "9090"
    ports:
      - "9090:9090"
    volumes:
      - ${PROMETHEUS_CONFIG_DIR}:/etc/prometheus:ro
      - ${PROMETHEUS_DATA_DIR}:/prometheus:rw
      - prometheus-docker-sd:/prometheus-docker-sd:ro
    command: [
      "--config.file=/etc/prometheus/prometheus.yml",
      "--storage.tsdb.path=/prometheus",
      "--storage.tsdb.retention.time=${PROMETHEUS_CONFIG_TSDB_RETENTION}",
      "--web.console.libraries=/usr/share/prometheus/console_libraries",
      "--web.console.templates=/usr/share/prometheus/consoles"
    ]
    depends_on:
      - prometheus-pushgateway
      - cadvisor
      - node-exporter
    links:
      - "prometheus-pushgateway"
      - "cadvisor"
      - "node-exporter"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9090", "-qSO", "/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

# ------------------------------------------------------------------------------
# prometheus-docker-sd
# ------------------------------------------------------------------------------
  prometheus-docker-sd:
    image: "stucky/prometheus-docker-sd:latest"
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - prometheus-docker-sd:/prometheus-docker-sd:rw

# ------------------------------------------------------------------------------
# prometheus-pushgateway
# ------------------------------------------------------------------------------
  prometheus-pushgateway:
    image: "prom/pushgateway:v0.8.0"
    restart: unless-stopped
    networks:
      - internal
    labels:
      prometheus-scrape.enabled:         "true"
      prometheus-scrape.job_name:        "prometheus-pushgateway"
      prometheus-scrape.port:            9091
      prometheus-scrape.metrics_path:    "/metrics"
    expose:
      - "9091"
    ports:
      - "9091:9091"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9091", "-qSO", "/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

# ------------------------------------------------------------------------------
# node-exporter
# ------------------------------------------------------------------------------
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    networks:
      - internal
    labels:
      prometheus-scrape.enabled:         "true"
      prometheus-scrape.job_name:        "node-exporter"
      prometheus-scrape.port:            9100
      prometheus-scrape.metrics_path:    "/metrics"
    volumes:
      - /proc:/rootfs/proc:ro
      - /sys:/rootfs/sys:ro
      - /:/rootfs:ro
    expose:
      - "9100"
    command:
      - '--path.procfs=/rootfs/proc'
      - '--path.sysfs=/rootfs/sys'
      - '--path.rootfs=/rootfs'
    healthcheck:
      test: ["CMD", "wget", "http://localhost:9100", "-qSO", "/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

# ------------------------------------------------------------------------------
# cAdvisor
# ------------------------------------------------------------------------------
  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.36.0
    restart: always
    networks:
      - internal
    labels:
      prometheus-scrape.enabled:         "true"
      prometheus-scrape.job_name:        "cadvisor"
      prometheus-scrape.port:            8080
      prometheus-scrape.metrics_path:    "/metrics"
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    expose:
      - "8080"
# Remove comment, if you want to access the cAdvisor-WebGui
#    ports:
#      - "8080:8080"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:8080/containers", "-qSO", "/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

# ------------------------------------------------------------------------------
# grafana
# ------------------------------------------------------------------------------
  grafana:
    image: "grafana/grafana:7.1.5"
    restart: unless-stopped
    networks:
      - internal
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      GF_INSTALL_PLUGINS:         "${GRAFANA_INSTALL_PLUGINS}"
      GF_SECURITY_ADMIN_PASSWORD: "${GRAFANA_INITIAL_ADMIN_PASSWORD}"
    volumes:
      - ${GRAFANA_CONFIG_DIR}:/etc/grafana:rw
      - ${GRAFANA_DATA_DIR}:/var/lib/grafana:rw
      - ${GRAFANA_LOG_DIR}:/var/log/grafana:rw
    depends_on:
      - prometheus
    links:
      - "prometheus"
    healthcheck:
      test: ["CMD", "wget", "http://localhost:3000", "-qSO", "/dev/null"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s

# ==============================================================================


# ==============================================================================
# Volumes
# ------------------------------------------------------------------------------
volumes:
  prometheus-docker-sd:

# ==============================================================================


# ==============================================================================
# Networks
# ------------------------------------------------------------------------------
networks:
 internal:

# ==============================================================================
 
