version: '3.7'

# ==============================================================================
# Services
# ------------------------------------------------------------------------------       
services:

# ------------------------------------------------------------------------------       
# prometheus
# ------------------------------------------------------------------------------
  prometheus:
    image: "prom/prometheus:v2.10.0"
    restart: unless-stopped
    networks:
      - internal
    expose:
      - "9090"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/etc/prometheus:ro
      - ./prometheus/data:/prometheus:rw
      - prometheus-docker-sd:/prometheus-docker-sd:ro
    command: [
      "--config.file=/etc/prometheus/prometheus.yml",
      "--storage.tsdb.path=/prometheus",
      "--storage.tsdb.retention.time=15d",
      "--web.console.libraries=/usr/share/prometheus/console_libraries",
      "--web.console.templates=/usr/share/prometheus/consoles"
    ]
    depends_on:
      - prometheus-pushgateway
      - cadvisor
      - node-exporter
    links:
      - "prometheus-pushgateway"
      - "cadvisor"
      - "node-exporter"

# ------------------------------------------------------------------------------       
# prometheus-docker-sd
# ------------------------------------------------------------------------------ 
  prometheus-docker-sd:
    image: "stucky/prometheus-docker-sd:latest"
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - prometheus-docker-sd:/prometheus-docker-sd:rw

# ------------------------------------------------------------------------------       
# prometheus-pushgateway
# ------------------------------------------------------------------------------ 
  prometheus-pushgateway:
    image: "prom/pushgateway:v0.8.0"
    restart: unless-stopped
    networks:
      - internal
    labels:
      prometheus-scrape.enabled:         "true"
      prometheus-scrape.job_name:        "prometheus-pushgateway"
      prometheus-scrape.port:            9091
      prometheus-scrape.metrics_path:    "/metrics"
    expose:
      - "9091"
    ports:
      - "9091:9091"

# ------------------------------------------------------------------------------       
# node-exporter
# ------------------------------------------------------------------------------ 
  node-exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    networks:
      - internal
    labels:
      prometheus-scrape.enabled:         "true"
      prometheus-scrape.job_name:        "node-exporter"
      prometheus-scrape.port:            9100
      prometheus-scrape.metrics_path:    "/metrics"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    expose:
      - "9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

# ------------------------------------------------------------------------------       
# cAdvisor
# ------------------------------------------------------------------------------
  cadvisor:
    image: gcr.io/google-containers/cadvisor:v0.35.0
    restart: always
    networks:
      hostnet: {}
    networks:
      - internal
    labels:
      prometheus-scrape.enabled:         "true"
      prometheus-scrape.job_name:        "cadvisor"
      prometheus-scrape.port:            8080
      prometheus-scrape.metrics_path:    "/metrics"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    expose:
      - "8080"
# Remove comment, if you want to access the cAdvisor-WebGui
#    ports:
#      - "8080:8080"

# ------------------------------------------------------------------------------       
# grafana
# ------------------------------------------------------------------------------       
  grafana:
    image: "grafana/grafana:7.1.5"
    restart: unless-stopped
    networks:
      - internal
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      GF_INSTALL_PLUGINS:         "flant-statusmap-panel,bessler-pictureit-panel,pierosavi-imageit-panel,agenty-flowcharting-panel,larona-epict-panel,marcuscalidus-svg-panel,neocat-cal-heatmap-panel,digiapulssi-breadcrumb-panel,michaeldmoore-multistat-panel,grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel,ryantxu-annolist-panel,farski-blendstat-panel,yesoreyeram-boomtable-panel,neocat-cal-heatmap-panel,petrslavotinek-carpetplot-panel,jdbranham-diagram-panel,natel-discrete-panel,simpod-json-datasource,zuburqan-parity-report-panel,natel-plotly-panel,corpglory-progresslist-panel,mxswat-separator-panel,vonage-status-panel,marcuscalidus-svg-panel,btplc-trend-box-panel,blackmirror1-statusbygroup-panel,btplc-status-dot-panel,grafana-polystat-panel"
      GF_SECURITY_ADMIN_PASSWORD: "password"
    volumes:
      - ./grafana/config:/etc/grafana:rw
      - ./grafana/data:/var/lib/grafana:rw
      - ./grafana/log:/var/log/grafana:rw
    depends_on:
      - prometheus
    links:
      - "prometheus"

# ==============================================================================


# ==============================================================================
# Volumes
# ------------------------------------------------------------------------------       
volumes:
  prometheus-docker-sd:

# ==============================================================================


# ==============================================================================
# Networks
# ------------------------------------------------------------------------------       
networks:
 internal:
 hostnet:
   external: true
   name: host

# ==============================================================================
